function uploadform(req, res) {
    res.render("MarkovModule/upload");
};

function safeCopy(input, output, callback) {
    var readstream = fs.createReadStream(input);
    var writestream = fs.createWriteStream(output);

    readstream.on('error', callback);
    writestream.on('error', callback);

    readstream.on('close', function() {
        fs.unlink(input, callback);
    });

    readstream.pipe(writestream);
}

function uploadfile(req,res) {
    var form = new formidable.IncomingForm();
    form.parse(req, function(err, fields, files) {
        if(!err) {
            var oldpath = files.inputfile.path;
            var newpath = './tmp/' + files.inputfile.name;
            safeCopy(oldpath, newpath, function(err) {
                if(!err) {
                    parseText(newpath, function(err, num_added) {
                        if(!err) {
                            res.end('added ' + num_added + ' entries to markov chain');
                        } else {
                            console.log(err);
                            res.end(err);
                        }
                    });
                } else {
                    console.log(err);
                    res.end(err);
                }
            });
        } else {
            console.log(err);
            res.end(err);
        }
    });
}

function parseText(path, callback) {
    fs.readFile(path, 'utf8', function(err, data) {
        if(!err) {
            try {
                var obj = JSON.parse(data);
                var count = 0;
                if(obj)
                    for(var key in obj) {
                        if(obj[key] && 'text' in obj[key]) {
                            buildChain(obj[key]);
                            count++;
                        }
                    }
                fs.unlink(path, callback);
                callback(undefined, count);
            } catch (e) {
                callback(e);
            }
        } else {
            callback(err);
        }
    });
}